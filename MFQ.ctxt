#BlueJ class context
comment0.target=MFQ
comment0.text=\r\n\ MFQ\ class\ that\ runs\ the\ simulation.\ The\ class\ runs\ the\ simulation\ in\ a\ loop\ very\ \r\n\ closely\ to\ the\ flowchart\ provided\ for\ the\ lab.\r\n\ MFQ\ will\ tick\ the\ clock,\ submit\ Job\ objects\ from\ the\ input\ queue\ into\ queue\ 1,\r\n\ check\ if\ the\ Cpu\ class's\ busyflag\ is\ true/false,\ decrement/increment\ Clock\ and\ Cpu\ class\ \r\n\ variables,\ Preempt\ Jobs\ from\ the\ Cpu\ and\ put\ them\ into\ the\ next\ lowest\ level\ queue,\r\n\ and\ submit\ jobs\ to\ the\ Cpu.\ \r\n\ MFQ\ will\ also\ output\ messages\ for\ events\ such\ as\ an\ arrival\ or\ departure\ from\r\n\ the\ queuing\ network.\r\n\r\n\ @author\ Joshua\ Matson\ id\#\ 012024010\r\n\ @version\ 4/5/2019\r\n
comment1.params=pw
comment1.target=MFQ(java.io.PrintWriter)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ InputQueue\r\n
comment10.params=job\ event
comment10.target=void\ eventOutput(Job,\ java.lang.String)
comment10.text=\r\n\ Outputs\ the\ event\ to\ console\ and\ csis.txt\ file\r\n\ and\ gets\ values\ for\ totalTimesum\ and\ waitTimeSum.\r\n\ \r\n\ @param\ \ \ Job\ object\ and\ String\ event\ (arrival/departure)\r\n
comment11.params=
comment11.target=void\ header()
comment11.text=\r\n\ Header\ for\ eventOutput.\ Outputs\ the\ titles\ of\ each\ column\ to\ console\ and\ csis.txt.\r\n
comment12.params=
comment12.target=void\ outstats()
comment12.text=\r\n\ Outputs\ the\ total\ number\ of\ jobs,\ time\ of\ all\ jobs\ in\ the\ system,\ average\ response\ time,\r\n\ average\ turnaround\ time,\ average\ waiting\ time,\ and\ average\ throughput\ for\ the\ system\r\n\ to\ console\ and\ csis.txt.\r\n
comment2.params=
comment2.target=void\ getJobs()
comment2.text=\r\n\ Retrieves\ Jobs\ from\ mfq5.txt\ file\ in\ string\ format,\ splits\ them\ and\ inserts\ their\ integer\r\n\ values\ into\ the\ inputQueue\r\n
comment3.params=
comment3.target=void\ startSimulation()
comment3.text=\r\n\ Method\ to\ run\ the\ multilevel\ feedback\ queue\ simulation\r\n
comment4.params=
comment4.target=boolean\ isJobFinished()
comment4.text=\r\n\ Checks\ is\ the\ job\ on\ the\ cpu\ is\ finished.\r\n\ \r\n\ @return\ \ true\ if\ job\ is\ finished,\ false\ if\ not\r\n
comment5.params=
comment5.target=void\ checkBusyFlag()
comment5.text=\r\n\ Checks\ the\ cpu\ busy\ flag.\ If\ true,\ decrements\ quantum\ clock\ and\ job\ clock\ \r\n\ then\ checks\ if\ the\ job\ is\ finished\ or\ if\ preemption\ should\ occur,\ if\ busy\ flag\r\n\ is\ false,\ it\ submits\ a\ job\ to\ the\ cpu.\r\n
comment6.params=
comment6.target=void\ submitJob()
comment6.text=\r\n\ Submits\ new\ job\ to\ cpu.\ submitJob\ prioritizes\ upper\ level\ queues\ first.\r\n
comment7.params=
comment7.target=boolean\ checkPreemption()
comment7.text=\r\n\ Checks\ if\ preemption\ should\ occur\ or\ not.\r\n\ Preemption\ occurs\ if\ the\ quantum\ clock\ has\ reached\ 0\ for\ a\ job\ or\ if\ there\ is\ a\ job\r\n\ waiting\ in\ queue\ 1.\r\n\ \r\n\ @return\ \ \ \ \ \ boolean\ true\ or\ false\ for\ if\ preemption\ should\ occur\r\n
comment8.params=
comment8.target=void\ preemption()
comment8.text=\r\n\ Takes\ the\ job\ from\ the\ Cpu,\ resets\ the\ busy\ flag\ and\ sends\ it\ to\ the\ next\ lower\ level\r\n\ queue.\r\n
comment9.params=
comment9.target=void\ sendToLLQ()
comment9.text=\r\n\ Inserts\ jobs\ into\ the\ next\ lower\ level\ queue.\r\n
numComments=13
